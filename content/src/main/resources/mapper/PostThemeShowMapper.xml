<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tj720.dao.PostThemeShowMapper" >
  <resultMap id="BaseResultMap" type="com.tj720.model.common.themeshow.PostThemeShow" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="datum_ids" property="datumIds" jdbcType="VARCHAR" />
    <result column="theme_name" property="themeName" jdbcType="VARCHAR" />
    <result column="theme_describe" property="themeDescribe" jdbcType="LONGVARCHAR" />
    <result column="theme_source" property="themeSource" jdbcType="VARCHAR" />
    <result column="collection_amount" property="collectionAmount" jdbcType="VARCHAR" />
    <result column="page_recommend" property="pageRecommend" jdbcType="VARCHAR" />
    <result column="selected_topics" property="selectedTopics" jdbcType="VARCHAR" />
    <result column="data_state" property="dataState" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>

  <resultMap id="BaseResultMap1" type="com.tj720.model.common.collect.CollectDto">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="colle_id" jdbcType="VARCHAR" property="colleId" />
    <result column="msg" jdbcType="VARCHAR" property="msg" />
    <result column="pictureids" jdbcType="VARCHAR" property="pictureids" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type_id" jdbcType="VARCHAR" property="typeId" />
    <result column="son_type_id" jdbcType="VARCHAR" property="sonTypeId" />
    <result column="commend" jdbcType="VARCHAR" property="commend" />
    <result column="isdelete" jdbcType="VARCHAR" property="isdelete" />
    <result column="sort" jdbcType="VARCHAR" property="sort" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="updater" jdbcType="VARCHAR" property="updater" />
    <result column="other1" jdbcType="VARCHAR" property="other1" />
    <result column="other2" jdbcType="VARCHAR" property="other2" />
    <result column="other3" jdbcType="VARCHAR" property="other3" />
    <result column="hasCollected" jdbcType="VARCHAR" property="hasCollected" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, datum_ids, theme_name, theme_describe, theme_source, collection_amount, page_recommend, 
    selected_topics, data_state, create_by, create_date, update_by, update_date
  </sql>

  <select id="themeshowList" resultMap="BaseResultMap"  parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from post_theme_show
    where 1=1  and  data_state = 1 and (theme_source = '1' or (theme_source = '2' and process_result = '1'))
    <if test="themeName != null and themeName != ''">
      and theme_name like concat('%',#{themeName},'%')
    </if>
    <if test="themeSource != null and themeSource != ''">
      and theme_source = #{themeSource}
    </if>
    <if test="orderBy == 1" >
      order by update_date desc
    </if>
    <if test="orderBy == 2" >
      order by create_date desc
    </if>
    limit #{currentPage},#{size}
  </select>


  <select id="count" resultType="int">
    select count(*) from  post_theme_show
    where 1=1 and  data_state = 1 and (theme_source = '1' or (theme_source = '2' and process_result = '1'))
    <if test="themeName != null and themeName != ''">
      and theme_name like concat('%',#{themeName},'%')
    </if>
    <if test="themeSource != null and themeSource != ''">
      and theme_source = #{themeSource}
    </if>
  </select>




  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from post_theme_show
    where  1=1 and  data_state = 1 and id = #{id,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from post_theme_show
    where id = #{id,jdbcType=VARCHAR}
  </delete>


  <insert id="insert" parameterType="com.tj720.model.common.themeshow.PostThemeShow" >
    insert into post_theme_show (id, datum_ids, theme_name, 
      theme_describe, theme_source, collection_amount, 
      page_recommend, selected_topics, data_state, 
      create_by, create_date, update_by, 
      update_date)
    values (#{id,jdbcType=VARCHAR}, #{datumIds,jdbcType=VARCHAR}, #{themeName,jdbcType=VARCHAR}, 
      #{themeDescribe,jdbcType=LONGVARCHAR}, #{themeSource,jdbcType=VARCHAR}, #{collectionAmount,jdbcType=VARCHAR},
      #{pageRecommend,jdbcType=VARCHAR}, #{selectedTopics,jdbcType=VARCHAR}, #{dataState,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.tj720.model.common.themeshow.PostThemeShow" >
    insert into post_theme_show
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="datumIds != null" >
        datum_ids,
      </if>
      <if test="themeName != null" >
        theme_name,
      </if>
      <if test="themeDescribe != null" >
        theme_describe,
      </if>
      <if test="themeSource != null" >
        theme_source,
      </if>
      <if test="collectionAmount != null" >
        collection_amount,
      </if>
      <if test="pageRecommend != null" >
        page_recommend,
      </if>
      <if test="selectedTopics != null" >
        selected_topics,
      </if>
      <if test="processState != null">
        process_state,
      </if>
      <if test="processResult != null">
        process_result,
      </if>
      <if test="dataState != null" >
        data_state,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName, jdbcType=VARCHAR},
      </if>
      <if test="datumIds != null" >
        #{datumIds,jdbcType=VARCHAR},
      </if>
      <if test="themeName != null" >
        #{themeName,jdbcType=VARCHAR},
      </if>
      <if test="themeDescribe != null" >
        #{themeDescribe,jdbcType=LONGVARCHAR},
      </if>
      <if test="themeSource != null" >
        #{themeSource,jdbcType=VARCHAR},
      </if>
      <if test="collectionAmount != null" >
        #{collectionAmount,jdbcType=VARCHAR},
      </if>
      <if test="pageRecommend != null" >
        #{pageRecommend,jdbcType=VARCHAR},
      </if>
      <if test="selectedTopics != null" >
        #{selectedTopics,jdbcType=VARCHAR},
      </if>
      <if test="processState != null">
        #{processState, jdbcType=VARCHAR},
      </if>
      <if test="processResult != null">
        #{processResult, jdbcType=VARCHAR},
      </if>
      <if test="dataState != null" >
        #{dataState,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>




  <update id="updateByPrimaryKeySelective" parameterType="com.tj720.model.common.themeshow.PostThemeShow" >
    update post_theme_show
    <set >
      <if test="datumIds != null" >
        datum_ids = #{datumIds,jdbcType=VARCHAR},
      </if>
      <if test="themeName != null" >
        theme_name = #{themeName,jdbcType=VARCHAR},
      </if>
      <if test="themeDescribe != null" >
        theme_describe = #{themeDescribe,jdbcType=LONGVARCHAR},
      </if>
      <if test="themeSource != null" >
        theme_source = #{themeSource,jdbcType=VARCHAR},
      </if>
      <if test="collectionAmount != null" >
        collection_amount = #{collectionAmount,jdbcType=VARCHAR},
      </if>
      <if test="pageRecommend != null" >
        page_recommend = #{pageRecommend,jdbcType=VARCHAR},
      </if>
      <if test="selectedTopics != null" >
        selected_topics = #{selectedTopics,jdbcType=VARCHAR},
      </if>
      <if test="processState != null">
          process_state = #{processState,jdbcType=VARCHAR},
      </if>
      <if test="processResult != null">
          process_result = #{processResult,jdbcType=VARCHAR},
      </if>
      <if test="dataState != null" >
        data_state = #{dataState,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.tj720.model.common.themeshow.PostThemeShow" >
    update post_theme_show
    set datum_ids = #{datumIds,jdbcType=VARCHAR},
      theme_name = #{themeName,jdbcType=VARCHAR},
      theme_describe = #{themeDescribe,jdbcType=LONGVARCHAR},
      theme_source = #{themeSource,jdbcType=VARCHAR},
      collection_amount = #{collectionAmount,jdbcType=VARCHAR},
      page_recommend = #{pageRecommend,jdbcType=VARCHAR},
      selected_topics = #{selectedTopics,jdbcType=VARCHAR},
      data_state = #{dataState,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>


  <update id="updateThemebByIds" parameterType = "java.util.List">
    update post_theme_show set data_state = 0 where id in
    <foreach collection="ids" open="(" item="id" separator="," close=")">
      #{id}
      #{id}
    </foreach>
  </update>

  <select id="CountSytj" resultType="java.lang.Integer">
    select count(1)
    from  post_theme_show
    where
    page_recommend = 1
    and data_state &gt; 0
  </select>

  <select id="CountJczj" resultType="java.lang.Integer" parameterType="java.lang.String">
    select count(1)
    from  post_theme_show
    where
    selected_topics = 1
    and data_state &gt; 0
  </select>


  <select id="getSourceOptions"  resultMap="BaseResultMap" >
		select id,theme_source  from  post_theme_show
  </select>





  <!--Web层-->
  <!--主题展首页推荐-->
  <select id="themeshowsyWebList" resultMap="BaseResultMap"  parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from post_theme_show
    where 1=1  and  data_state = 1 and  page_recommend = 1
    <if test="themeName != null and themeName != ''">
      and theme_name like concat('%',#{themeName},'%')
    </if>
    <if test="themeSource != null and themeSource != ''">
      and theme_source = #{themeSource}
    </if>
    order by
    update_date desc
    limit #{currentPage},#{size}
  </select>


  <select id="countsyWeb" resultType="int" parameterType="java.util.Map">
    select count(1) from  post_theme_show
    where 1=1 and  data_state = 1 and page_recommend = 1
    <if test="themeName != null and themeName != ''">
      and theme_name like concat('%',#{themeName},'%')
    </if>
    <if test="themeSource != null and themeSource != ''">
      and theme_source = #{themeSource}
    </if>
  </select>




  <select id="selectWebByPrimaryKey" resultType="com.tj720.model.common.themeshow.PostThemeShow"  parameterType="java.lang.String" >
    select
    t.id,
    t.datum_ids  as datumIds,
    t.theme_name as themeName,
    t.theme_describe as themeDescribe,
    t.create_date as createDate,
    case
    when exists (
    select
    w.id
    from
    post_web_collect w
    where
    t.id = w.cid
    and w.type = '1'
    ) then
    '1'
    else
    '0'
    end as hascollected
    from
    post_theme_show t
    where t.data_state = '1'
    and  t.id = #{id}
  </select>



  <select id="themeshowWebztList" resultType="com.tj720.model.common.themeshow.PostThemeShow"  parameterType="java.util.Map">
    select
    t.id,
    t.datum_ids  as datumIds,
    t.theme_name as themeName,
    t.theme_describe as themeDescribe,
    t.create_date as createDate,
    case
    when exists (
    select
    w.id
    from
    post_web_collect w
    where
    t.id = w.cid
    and w.type = '1'
    and w.status = 1
    <if test="userId != null and userId != ''">
      and w.user_id = #{userId}
    </if>
    ) then
    '1'
    else
    '0'
    end as hascollected
    from
    post_theme_show t
    where t.data_state = '1'
    and  t.id = #{id}
    <if test="selectedTopics!=null and selectedTopics!=''" >
      and selected_topics = #{selectedTopics}
    </if>
    order by
    t.update_date desc
    limit #{currentPage},#{size}

  </select>


  <select id="countWebzt" resultType="int" parameterType="java.util.Map">
    select count(1) from  post_theme_show t
    where t.data_state = '1'
  </select>


  <select id="coutJxztList" resultType="int" parameterType="java.util.Map">
    select
    count(1)
    from
    post_theme_show t
    where t.data_state = '1'
    <if test="selectedTopics!=null and selectedTopics!=''" >
      and selected_topics = #{selectedTopics}
    </if>
  </select>

  <select id="getJxztList" resultType="com.tj720.model.common.themeshow.PostThemeShow" parameterType="java.util.Map">
    select
    t.id,
    t.datum_ids  as datumIds,
    t.theme_name as themeName,
    t.theme_describe as themeDescribe,
    t.create_date as createDate,
    case
    when exists (
    select
    w.id
    from
    post_web_collect w
    where
    t.id = w.cid
    and w.type = '1'
    and w.status = 1
    and w.user_id = #{userId}
    ) then
    '1'
    else
    '0'
    end as hascollected
    from
    post_theme_show t
    where t.data_state = '1'
    <if test="selectedTopics!=null and selectedTopics!=''" >
      and selected_topics = #{selectedTopics}
    </if>
    order by
    t.update_date desc
    <if test="currentPage != null and currentPage!=''">
      limit #{currentPage},#{size}
    </if>
  </select>

  <!--web端分页-->
  <select id="themeshowWebList"  resultType="com.tj720.model.common.themeshow.PostThemeShow" parameterType="java.util.Map">
    select
    t.id,
    t.datum_ids  as datumIds,
    t.theme_name as themeName,
    t.theme_describe as themeDescribe,
    t.create_date as createDate,
    case
    when exists (
    select
    w.id
    from
    post_web_collect w
    where
    t.id = w.cid
    and  w.type = '1'
    and  w.status =1
    <choose>
      <when test="userId != null and userId != ''">
          and  w.user_id = #{userId}
      </when>
      <otherwise>
        and  w.user_id = ''
      </otherwise>
    </choose>
    ) then
    '1'
    else
    '0'
    end as hascollected
    from
    post_theme_show t
    where t.data_state = '1' and t.page_recommend = 1
    and (t.theme_source = 1 or (t.theme_source = '2' or t.process_result = '1'))
    <if test="id != null">
      and t.id = #{id}
    </if>
    order by
    t.update_date desc
  </select>



  <select id="countWeb" resultType="int" parameterType="java.util.Map">
    select count(1) from  post_theme_show t
    where t.data_state = '1'  and t.page_recommend = 1
  </select>



  <select id="themeshowWebListRelation"  resultType="com.tj720.model.common.themeshow.PostThemeShow"
          parameterType="java.util.Map">
    select
    t.id,
    t.datum_ids  as datumIds,
    t.theme_name as themeName,
    t.theme_describe as themeDescribe,
    t.create_date as createDate,
    case
    when exists (
    select
    w.id
    from
    post_web_collect w
    where
    t.id = w.cid
    and  w.type = '1'
    and  w.status =1
    <choose>
      <when test="userId != null and userId != ''">
        and  w.user_id = #{userId}
      </when>
      <otherwise>
        and  w.user_id = ''
      </otherwise>
    </choose>
    ) then
    '1'
    else
    '0'
    end as hascollected
    from
    post_theme_show t
    where t.data_state = '1' and t.id = #{id}
    limit 1
  </select>




  <select id="countWebRelation" resultType="int" parameterType="java.util.Map">
    select count(1) from  post_theme_show t
    where t.data_state = '1'
  </select>





  <select id="getCollectsById"  resultType="com.tj720.model.common.collect.Collect" parameterType="java.lang.String">

    select a.id,a.msg,a.pictureids,a.`name`,
    case
    when exists (
    select
    w.id
    from
    post_web_collect w
    where
    a.id = w.cid
    and w.type = '2'
    ) then
    '1'
    else
    '0'
    end as hascollected
    from post_collection a
    left join post_collection_type b on a.id = b.collect_id
    left join post_theme_show c on b.theme_show_id = c.id
    where c.id= #{id}

  </select>

  <select id="getAppThemeById" resultType="com.tj720.model.common.themeshow.PostThemeShow">
    select
    t.id,
    t.datum_ids  as datumIds,
    t.theme_name as themeName,
    t.theme_describe as themeDescribe,
    t.create_date as createDate,
    case
    when exists (
    select
    w.id
    from
    post_web_collect w
    where
    t.id = w.cid
    and w.type = '1'
    and w.status = 1
    and w.user_id = #{userId}
    ) then
    '1'
    else
    '0'
    end as hascollected
    from
    post_theme_show t
    where t.data_state = '1'
    and  t.id = #{id}

  </select>

<select id="getCollectsByThemId" resultMap="BaseResultMap1">
      select p.*,
       case
    when exists (
    select
    w.id
    from
    post_web_collect w
    where
    p.id = w.cid
    and w.type = '2'
    and w.status = 1
    and w.user_id = #{userId}
    ) then
    '1'
    else
    '0'
    end as hascollected
       from post_collection
      p,post_collection_type t
      where t.theme_show_id = #{id}
      and t.collect_id = p.id
</select>



</mapper>