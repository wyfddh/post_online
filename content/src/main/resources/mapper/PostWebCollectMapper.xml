<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tj720.dao.PostWebCollectMapper">
  <resultMap id="BaseResultMap" type="com.tj720.model.common.postwebcollect.PostWebCollect">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="cid" jdbcType="VARCHAR" property="cid" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="sequence" jdbcType="INTEGER" property="sequence" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="type" jdbcType="CHAR" property="type" />
  </resultMap>

  <!--<sql id="Example_Where_Clause">-->
    <!--<where>-->
      <!--<foreach collection="oredCriteria" item="criteria" separator="or">-->
        <!--<if test="criteria.valid">-->
          <!--<trim prefix="(" prefixOverrides="and" suffix=")">-->
            <!--<foreach collection="criteria.criteria" item="criterion">-->
              <!--<choose>-->
                <!--<when test="criterion.noValue">-->
                  <!--and ${criterion.condition}-->
                <!--</when>-->
                <!--<when test="criterion.singleValue">-->
                  <!--and ${criterion.condition} #{criterion.value}-->
                <!--</when>-->
                <!--<when test="criterion.betweenValue">-->
                  <!--and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}-->
                <!--</when>-->
                <!--<when test="criterion.listValue">-->
                  <!--and ${criterion.condition}-->
                  <!--<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">-->
                    <!--#{listItem}-->
                  <!--</foreach>-->
                <!--</when>-->
              <!--</choose>-->
            <!--</foreach>-->
          <!--</trim>-->
        <!--</if>-->
      <!--</foreach>-->
    <!--</where>-->
  <!--</sql>-->
  <!--<sql id="Update_By_Example_Where_Clause">-->
    <!--<where>-->
      <!--<foreach collection="example.oredCriteria" item="criteria" separator="or">-->
        <!--<if test="criteria.valid">-->
          <!--<trim prefix="(" prefixOverrides="and" suffix=")">-->
            <!--<foreach collection="criteria.criteria" item="criterion">-->
              <!--<choose>-->
                <!--<when test="criterion.noValue">-->
                  <!--and ${criterion.condition}-->
                <!--</when>-->
                <!--<when test="criterion.singleValue">-->
                  <!--and ${criterion.condition} #{criterion.value}-->
                <!--</when>-->
                <!--<when test="criterion.betweenValue">-->
                  <!--and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}-->
                <!--</when>-->
                <!--<when test="criterion.listValue">-->
                  <!--and ${criterion.condition}-->
                  <!--<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">-->
                    <!--#{listItem}-->
                  <!--</foreach>-->
                <!--</when>-->
              <!--</choose>-->
            <!--</foreach>-->
          <!--</trim>-->
        <!--</if>-->
      <!--</foreach>-->
    <!--</where>-->
  <!--</sql>-->

  <sql id="Base_Column_List">
    id, user_id, cid, status, sequence, create_time, type
  </sql>
  <!--<select id="selectByExample" parameterType="com.tj720.model.common.postwebcollect.PostWebCollectExample" resultMap="BaseResultMap">-->
    <!--select-->
    <!--<if test="distinct">-->
      <!--distinct-->
    <!--</if>-->
    <!--<include refid="Base_Column_List" />-->
    <!--from post_web_collect-->
    <!--<if test="_parameter != null">-->
      <!--<include refid="Example_Where_Clause" />-->
    <!--</if>-->
    <!--<if test="orderByClause != null">-->
      <!--order by ${orderByClause}-->
    <!--</if>-->
  <!--</select>-->

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from post_web_collect
    where id = #{id,jdbcType=VARCHAR}
  </select>


  <!--根据用户id和cid查询出收藏类-->
  <select id="getWebCollect"  parameterType="java.util.Map"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from post_web_collect
    where user_id = #{userId} and  cid = #{cid}
    <if test="type != null and type != ''">
      and type = #{type}
    </if>
    <if test="status != null and status != ''">
      and status = #{status}
    </if>
    limit 1
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from post_web_collect
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <!--<delete id="deleteByExample" parameterType="com.tj720.model.common.postwebcollect.PostWebCollectExample">-->
    <!--delete from post_web_collect-->
    <!--<if test="_parameter != null">-->
      <!--<include refid="Example_Where_Clause" />-->
    <!--</if>-->
  <!--</delete>-->
  <insert id="insert" parameterType="com.tj720.model.common.postwebcollect.PostWebCollect">
    insert into post_web_collect (id, user_id, cid,
      status, sequence, create_time,
      type)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{cid,jdbcType=VARCHAR},
      #{status,jdbcType=TINYINT}, #{sequence,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{type,jdbcType=CHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.tj720.model.common.postwebcollect.PostWebCollect">
    insert into post_web_collect
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="sequence != null">
        sequence,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="sequence != null">
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
    </trim>
  </insert>


  <!--<select id="countByExample" parameterType="com.tj720.model.common.postwebcollect.PostWebCollectExample" resultType="java.lang.Long">-->
    <!--select count(*) from post_web_collect-->
    <!--<if test="_parameter != null">-->
      <!--<include refid="Example_Where_Clause" />-->
    <!--</if>-->
  <!--</select>-->

  <update id="updateByPrimaryKeySelective" parameterType="com.tj720.model.common.postwebcollect.PostWebCollect">
    update post_web_collect
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="sequence != null">
        sequence = #{sequence,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.tj720.model.common.postwebcollect.PostWebCollect">
    update post_web_collect
    set user_id = #{userId,jdbcType=VARCHAR},
      cid = #{cid,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      sequence = #{sequence,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>